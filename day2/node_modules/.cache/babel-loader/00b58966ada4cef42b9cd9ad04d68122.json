{"ast":null,"code":"var _jsxFileName = \"/home/nikhil/web-fundamentals/day2/src/App1.js\";\nimport React, { Component, PureComponent } from 'react';\nimport AddButton from './Components/AddButton';\nimport DelButton from './Components/DelButton';\nimport EditButton from './Components/EditButton';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass App1 extends PureComponent {\n  constructor() {\n    super();\n    this.adduser = user => {\n      // This code is not worling properly because here is need of another setState without any use;\n      let userList = this.state.users;\n      userList.push(user);\n      this.setState({\n        users: userList\n      });\n      //it's written just because of output the all users after adding;\n      let newCounter = this.state.counter + 1;\n      this.setState({\n        counter: newCounter\n      });\n      console.log(this.state.users);\n    };\n    this.deleteuser = key => {\n      console.log(key);\n      let userList = this.state.users;\n      userList.splice(key, 1);\n      this.setState({\n        users: userList\n      });\n\n      // //it's written just because of output the all users after deleting;\n      let newCounter = this.state.counter + 1;\n      this.setState({\n        counter: newCounter\n      });\n    };\n    this.edituser = (updateuser, key) => {\n      let userList = this.state.users;\n      userList[key] = updateuser;\n      this.setState({\n        users: userList\n      });\n\n      //it's written just because of output the all users after editing;\n      let newCounter = this.state.counter + 1;\n      this.setState({\n        counter: newCounter\n      });\n    };\n    this.state = {\n      counter: 0,\n      users: []\n    };\n  }\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(AddButton, {\n        Adduser: this.adduser\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: this.state.users.map((USER, index) => {\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(User, {\n              user: USER\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 69,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(DelButton, {\n              id: index,\n              deleteuser: this.deleteuser\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 70,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(EditButton, {\n              id: index,\n              edituser: this.edituser,\n              user: USER\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 71,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 25\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }, this);\n  }\n}\nexport default App1;","map":{"version":3,"names":["React","Component","PureComponent","AddButton","DelButton","EditButton","App1","constructor","adduser","user","userList","state","users","push","setState","newCounter","counter","console","log","deleteuser","key","splice","edituser","updateuser","render","map","USER","index"],"sources":["/home/nikhil/web-fundamentals/day2/src/App1.js"],"sourcesContent":["import React, { Component, PureComponent } from 'react';\nimport AddButton from './Components/AddButton';\nimport DelButton from './Components/DelButton';\nimport EditButton from './Components/EditButton';\n\nclass App1 extends PureComponent {\n\n    constructor() {\n        super()\n        this.state = {\n            counter : 0,\n            users: []\n\n        }\n    }\n\n\n\n    adduser = (user) => {\n       \n       // This code is not worling properly because here is need of another setState without any use;\n        let userList = this.state.users;\n        userList.push(user);\n\n        this.setState({users : userList});\n        //it's written just because of output the all users after adding;\n        let newCounter = this.state.counter + 1;\n        this.setState({ counter: newCounter });\n        \n      console.log(this.state.users);\n    }\n\n    deleteuser = (key) => {\n          console.log(key);\n        let userList = this.state.users;\n\n        userList.splice(key, 1);\n        this.setState({ users: userList });\n\n        // //it's written just because of output the all users after deleting;\n        let newCounter = this.state.counter + 1;\n        this.setState({ counter: newCounter });\n        \n    }\n\n    edituser = (updateuser, key) => {\n        let userList = this.state.users;\n        userList[key]= updateuser;\n        \n        this.setState({ users: userList });\n\n        //it's written just because of output the all users after editing;\n        let newCounter = this.state.counter + 1;\n        this.setState({ counter: newCounter });\n       \n\n    }\n\n    render() {\n\n        return (\n            <div>\n\n                <AddButton Adduser={this.adduser}></AddButton>\n\n                <div>{this.state.users.map((USER, index) => {\n                    return (\n                        <div>\n                            <User key={index} user={USER} />\n                            <DelButton id={index} deleteuser={this.deleteuser}></DelButton>\n                            <EditButton id={index} edituser={this.edituser} user={USER}></EditButton>\n                        </div>)\n\n                })}\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default App1;"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,aAAa,QAAQ,OAAO;AACvD,OAAOC,SAAS,MAAM,wBAAwB;AAC9C,OAAOC,SAAS,MAAM,wBAAwB;AAC9C,OAAOC,UAAU,MAAM,yBAAyB;AAAC;AAEjD,MAAMC,IAAI,SAASJ,aAAa,CAAC;EAE7BK,WAAW,GAAG;IACV,KAAK,EAAE;IAAA,KAUXC,OAAO,GAAIC,IAAI,IAAK;MAEjB;MACC,IAAIC,QAAQ,GAAG,IAAI,CAACC,KAAK,CAACC,KAAK;MAC/BF,QAAQ,CAACG,IAAI,CAACJ,IAAI,CAAC;MAEnB,IAAI,CAACK,QAAQ,CAAC;QAACF,KAAK,EAAGF;MAAQ,CAAC,CAAC;MACjC;MACA,IAAIK,UAAU,GAAG,IAAI,CAACJ,KAAK,CAACK,OAAO,GAAG,CAAC;MACvC,IAAI,CAACF,QAAQ,CAAC;QAAEE,OAAO,EAAED;MAAW,CAAC,CAAC;MAExCE,OAAO,CAACC,GAAG,CAAC,IAAI,CAACP,KAAK,CAACC,KAAK,CAAC;IAC/B,CAAC;IAAA,KAEDO,UAAU,GAAIC,GAAG,IAAK;MAChBH,OAAO,CAACC,GAAG,CAACE,GAAG,CAAC;MAClB,IAAIV,QAAQ,GAAG,IAAI,CAACC,KAAK,CAACC,KAAK;MAE/BF,QAAQ,CAACW,MAAM,CAACD,GAAG,EAAE,CAAC,CAAC;MACvB,IAAI,CAACN,QAAQ,CAAC;QAAEF,KAAK,EAAEF;MAAS,CAAC,CAAC;;MAElC;MACA,IAAIK,UAAU,GAAG,IAAI,CAACJ,KAAK,CAACK,OAAO,GAAG,CAAC;MACvC,IAAI,CAACF,QAAQ,CAAC;QAAEE,OAAO,EAAED;MAAW,CAAC,CAAC;IAE1C,CAAC;IAAA,KAEDO,QAAQ,GAAG,CAACC,UAAU,EAAEH,GAAG,KAAK;MAC5B,IAAIV,QAAQ,GAAG,IAAI,CAACC,KAAK,CAACC,KAAK;MAC/BF,QAAQ,CAACU,GAAG,CAAC,GAAEG,UAAU;MAEzB,IAAI,CAACT,QAAQ,CAAC;QAAEF,KAAK,EAAEF;MAAS,CAAC,CAAC;;MAElC;MACA,IAAIK,UAAU,GAAG,IAAI,CAACJ,KAAK,CAACK,OAAO,GAAG,CAAC;MACvC,IAAI,CAACF,QAAQ,CAAC;QAAEE,OAAO,EAAED;MAAW,CAAC,CAAC;IAG1C,CAAC;IA/CG,IAAI,CAACJ,KAAK,GAAG;MACTK,OAAO,EAAG,CAAC;MACXJ,KAAK,EAAE;IAEX,CAAC;EACL;EA4CAY,MAAM,GAAG;IAEL,oBACI;MAAA,wBAEI,QAAC,SAAS;QAAC,OAAO,EAAE,IAAI,CAAChB;MAAQ;QAAA;QAAA;QAAA;MAAA,QAAa,eAE9C;QAAA,UAAM,IAAI,CAACG,KAAK,CAACC,KAAK,CAACa,GAAG,CAAC,CAACC,IAAI,EAAEC,KAAK,KAAK;UACxC,oBACI;YAAA,wBACI,QAAC,IAAI;cAAa,IAAI,EAAED;YAAK,GAAlBC,KAAK;cAAA;cAAA;cAAA;YAAA,QAAgB,eAChC,QAAC,SAAS;cAAC,EAAE,EAAEA,KAAM;cAAC,UAAU,EAAE,IAAI,CAACR;YAAW;cAAA;cAAA;cAAA;YAAA,QAAa,eAC/D,QAAC,UAAU;cAAC,EAAE,EAAEQ,KAAM;cAAC,QAAQ,EAAE,IAAI,CAACL,QAAS;cAAC,IAAI,EAAEI;YAAK;cAAA;cAAA;cAAA;YAAA,QAAc;UAAA;YAAA;YAAA;YAAA;UAAA,QACvE;QAEd,CAAC;MAAC;QAAA;QAAA;QAAA;MAAA,QACI;IAAA;MAAA;MAAA;MAAA;IAAA,QACJ;EAEd;AACJ;AAEA,eAAepB,IAAI"},"metadata":{},"sourceType":"module"}