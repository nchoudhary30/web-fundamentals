{"ast":null,"code":"var _jsxFileName = \"/home/nikhil/web-fundamentals/day2/src/App.js\";\nimport React, { PureComponent } from \"react\";\nimport AddButton from \"./Components/AddButton\";\nimport DelButton from \"./Components/DelButton\";\nimport EditButton from \"./Components/EditButton\";\nimport User from \"./Components/User\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass App extends PureComponent {\n  constructor() {\n    super();\n    this.adduser = user => {\n      // This code is not worling properly because here is need of another setState without any use;\n      let userList = this.state.users;\n      userList.add(user);\n      this.setState({\n        users: userList\n      });\n      //it's written just because of output the all users after adding;\n      let newCounter = this.state.counter + 1;\n      this.setState({\n        counter: newCounter\n      });\n      console.log(this.state.users);\n    };\n    this.deleteuser = key => {\n      console.log(key);\n      let userList = this.state.users;\n      userList.splice(key, 1);\n      this.setState({\n        users: userList\n      });\n\n      // //it's written just because of output the all users after deleting;\n      let newCounter = this.state.counter + 1;\n      this.setState({\n        counter: newCounter\n      });\n    };\n    this.edituser = (updateuser, key) => {\n      let userList = this.state.users;\n      userList[key] = updateuser;\n      this.setState({\n        users: userList\n      });\n\n      //it's written just because of output the all users after editing;\n      let newCounter = this.state.counter + 1;\n      this.setState({\n        counter: newCounter\n      });\n    };\n    this.state = {\n      counter: 0,\n      users: []\n    };\n  }\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(AddButton, {\n        Adduser: this.adduser\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: this.state.users.map((USER, index) => {\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(User, {\n              user: USER\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 61,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(DelButton, {\n              id: index,\n              deleteuser: this.deleteuser\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 62,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(EditButton, {\n              id: index,\n              edituser: this.edituser,\n              user: USER\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 63,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 15\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this);\n  }\n}\nexport default App;","map":{"version":3,"names":["React","PureComponent","AddButton","DelButton","EditButton","User","App","constructor","adduser","user","userList","state","users","add","setState","newCounter","counter","console","log","deleteuser","key","splice","edituser","updateuser","render","map","USER","index"],"sources":["/home/nikhil/web-fundamentals/day2/src/App.js"],"sourcesContent":["import React, { PureComponent } from \"react\";\nimport AddButton from \"./Components/AddButton\";\nimport DelButton from \"./Components/DelButton\";\nimport EditButton from \"./Components/EditButton\";\nimport User from \"./Components/User\";\n\nclass App extends PureComponent {\n  constructor() {\n    super();\n    this.state = {\n      counter: 0,\n      users: [],\n    };\n  }\n\n  adduser = (user) => {\n    // This code is not worling properly because here is need of another setState without any use;\n    let userList = this.state.users;\n    userList.add(user);\n\n    this.setState({ users: userList });\n    //it's written just because of output the all users after adding;\n    let newCounter = this.state.counter + 1;\n    this.setState({ counter: newCounter });\n\n    console.log(this.state.users);\n  };\n\n  deleteuser = (key) => {\n    console.log(key);\n    let userList = this.state.users;\n\n    userList.splice(key, 1);\n    this.setState({ users: userList });\n\n    // //it's written just because of output the all users after deleting;\n    let newCounter = this.state.counter + 1;\n    this.setState({ counter: newCounter });\n  };\n\n  edituser = (updateuser, key) => {\n    let userList = this.state.users;\n    userList[key] = updateuser;\n\n    this.setState({ users: userList });\n\n    //it's written just because of output the all users after editing;\n    let newCounter = this.state.counter + 1;\n    this.setState({ counter: newCounter });\n  };\n\n  render() {\n    return (\n      <div>\n        <AddButton Adduser={this.adduser}></AddButton>\n\n        <div>\n          {this.state.users.map((USER, index) => {\n            return (\n              <div>\n                <User key={index} user={USER} />\n                <DelButton id={index} deleteuser={this.deleteuser}></DelButton>\n                <EditButton\n                  id={index}\n                  edituser={this.edituser}\n                  user={USER}\n                ></EditButton>\n              </div>\n            );\n          })}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,aAAa,QAAQ,OAAO;AAC5C,OAAOC,SAAS,MAAM,wBAAwB;AAC9C,OAAOC,SAAS,MAAM,wBAAwB;AAC9C,OAAOC,UAAU,MAAM,yBAAyB;AAChD,OAAOC,IAAI,MAAM,mBAAmB;AAAC;AAErC,MAAMC,GAAG,SAASL,aAAa,CAAC;EAC9BM,WAAW,GAAG;IACZ,KAAK,EAAE;IAAC,KAOVC,OAAO,GAAIC,IAAI,IAAK;MAClB;MACA,IAAIC,QAAQ,GAAG,IAAI,CAACC,KAAK,CAACC,KAAK;MAC/BF,QAAQ,CAACG,GAAG,CAACJ,IAAI,CAAC;MAElB,IAAI,CAACK,QAAQ,CAAC;QAAEF,KAAK,EAAEF;MAAS,CAAC,CAAC;MAClC;MACA,IAAIK,UAAU,GAAG,IAAI,CAACJ,KAAK,CAACK,OAAO,GAAG,CAAC;MACvC,IAAI,CAACF,QAAQ,CAAC;QAAEE,OAAO,EAAED;MAAW,CAAC,CAAC;MAEtCE,OAAO,CAACC,GAAG,CAAC,IAAI,CAACP,KAAK,CAACC,KAAK,CAAC;IAC/B,CAAC;IAAA,KAEDO,UAAU,GAAIC,GAAG,IAAK;MACpBH,OAAO,CAACC,GAAG,CAACE,GAAG,CAAC;MAChB,IAAIV,QAAQ,GAAG,IAAI,CAACC,KAAK,CAACC,KAAK;MAE/BF,QAAQ,CAACW,MAAM,CAACD,GAAG,EAAE,CAAC,CAAC;MACvB,IAAI,CAACN,QAAQ,CAAC;QAAEF,KAAK,EAAEF;MAAS,CAAC,CAAC;;MAElC;MACA,IAAIK,UAAU,GAAG,IAAI,CAACJ,KAAK,CAACK,OAAO,GAAG,CAAC;MACvC,IAAI,CAACF,QAAQ,CAAC;QAAEE,OAAO,EAAED;MAAW,CAAC,CAAC;IACxC,CAAC;IAAA,KAEDO,QAAQ,GAAG,CAACC,UAAU,EAAEH,GAAG,KAAK;MAC9B,IAAIV,QAAQ,GAAG,IAAI,CAACC,KAAK,CAACC,KAAK;MAC/BF,QAAQ,CAACU,GAAG,CAAC,GAAGG,UAAU;MAE1B,IAAI,CAACT,QAAQ,CAAC;QAAEF,KAAK,EAAEF;MAAS,CAAC,CAAC;;MAElC;MACA,IAAIK,UAAU,GAAG,IAAI,CAACJ,KAAK,CAACK,OAAO,GAAG,CAAC;MACvC,IAAI,CAACF,QAAQ,CAAC;QAAEE,OAAO,EAAED;MAAW,CAAC,CAAC;IACxC,CAAC;IAxCC,IAAI,CAACJ,KAAK,GAAG;MACXK,OAAO,EAAE,CAAC;MACVJ,KAAK,EAAE;IACT,CAAC;EACH;EAsCAY,MAAM,GAAG;IACP,oBACE;MAAA,wBACE,QAAC,SAAS;QAAC,OAAO,EAAE,IAAI,CAAChB;MAAQ;QAAA;QAAA;QAAA;MAAA,QAAa,eAE9C;QAAA,UACG,IAAI,CAACG,KAAK,CAACC,KAAK,CAACa,GAAG,CAAC,CAACC,IAAI,EAAEC,KAAK,KAAK;UACrC,oBACE;YAAA,wBACE,QAAC,IAAI;cAAa,IAAI,EAAED;YAAK,GAAlBC,KAAK;cAAA;cAAA;cAAA;YAAA,QAAgB,eAChC,QAAC,SAAS;cAAC,EAAE,EAAEA,KAAM;cAAC,UAAU,EAAE,IAAI,CAACR;YAAW;cAAA;cAAA;cAAA;YAAA,QAAa,eAC/D,QAAC,UAAU;cACT,EAAE,EAAEQ,KAAM;cACV,QAAQ,EAAE,IAAI,CAACL,QAAS;cACxB,IAAI,EAAEI;YAAK;cAAA;cAAA;cAAA;YAAA,QACC;UAAA;YAAA;YAAA;YAAA;UAAA,QACV;QAEV,CAAC;MAAC;QAAA;QAAA;QAAA;MAAA,QACE;IAAA;MAAA;MAAA;MAAA;IAAA,QACF;EAEV;AACF;AAEA,eAAepB,GAAG"},"metadata":{},"sourceType":"module"}